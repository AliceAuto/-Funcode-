#include "Entity.h"
#include <iostream>

//======================================================
/*
                        Entity 类的实现
*/
//======================================================




// [说明]
// 构造函数：初始化实体
// 设置实体的初始位置、资源包名称，并初始化速度、ID 和资源包指针
// 参数:
//   - initialX: 实体的初始 X 坐标
//   - initialY: 实体的初始 Y 坐标
//   - resourceBagName: 资源包的名称
//____________________________________________________________________________________________________________
Entity::Entity(float initialX, float initialY, const std::string& resourceBagName)
    : Object(initialX, initialY, resourceBagName) {
    // 其他初始化代码
}
//________________________________________________________________
//____________________________________________________________________________________________________________
Entity::~Entity() {
    // 其他初始化代码
}
//________________________________________________________________



// [说明]
// Init 函数：初始化角色的物理属性
// 对角色的物理属性进行初始化，如设置质量、惯性矩等
//____________________________________________________________________________________________________________
void Entity::Init() {
    this->Object::Init(); // 调用基类的初始化函数

}
//____________________________________________________________________________________________________________




// [说明]
// breakdown 函数：清理角色的物理属性
// 对角色的物理属性进行清理，调用基类的清理函数
//____________________________________________________________________________________________________________
void Entity::breakdown() {
    Object::breakdown(); // 调用基类的清理函数
}
//____________________________________________________________________________________________________________



// [说明]
// ifCollision 函数：处理碰撞事件
// 处理与其他实体的碰撞事件
// 参数:
//   - otherEntity: 其他碰撞的实体
//____________________________________________________________________________________________________________
void Entity::ifCollision(Entity* otherEntity) {
    LogManager::Log("<发生碰撞>");
}
//____________________________________________________________________________________________________________

void Entity::UpdateAnimation(){}
void Entity::UpdateSound(){}
void Entity::UpdateState(){}